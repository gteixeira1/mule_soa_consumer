
package com.temp.convertor.client;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import org.mule.api.MuleEventContext;
import org.mule.api.MuleMessage;
import org.mule.api.lifecycle.Callable;
import org.mule.module.http.internal.ParameterMap;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2015-09-08T18:16:17.515-03:00
 * Generated source version: 2.5.1
 * 
 */
public final class WSConsumerTempConvertor implements Callable{

    private static final QName SERVICE_NAME = new QName("http://www.w3schools.com/webservices/", "TempConvert");

    public WSConsumerTempConvertor() {
    	
    }

    @Override
    public Object onCall(MuleEventContext eventContext) throws Exception {
    	
    	MuleMessage message = eventContext.getMessage();
    	ParameterMap httpQueryParams = message.getInboundProperty("http.query.params");
    	
        URL wsdlURL = TempConvert.WSDL_LOCATION;
        
        File wsdlFile = new File("http://www.w3schools.com/webservices/tempconvert.asmx?wsdl");
        try {
            if (wsdlFile.exists()) {
                wsdlURL = wsdlFile.toURI().toURL();
            } else {
                wsdlURL = new URL("http://www.w3schools.com/webservices/tempconvert.asmx?wsdl");
            }
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
      
        TempConvert ss = new TempConvert(wsdlURL, SERVICE_NAME);
        TempConvertSoap port = ss.getTempConvertSoap();
        
        String temp = "No valid parameters were provided";
        
        if( httpQueryParams.get("Celsius") != null ){
        	
	        System.out.println("Invoking celsiusToFahrenheit...");
	        java.lang.String _celsiusToFahrenheit_celsius = httpQueryParams.get("Celsius");
	        java.lang.String _celsiusToFahrenheit__return = port.celsiusToFahrenheit(_celsiusToFahrenheit_celsius);
	        System.out.println("celsiusToFahrenheit.result=" + _celsiusToFahrenheit__return);
	        temp = _celsiusToFahrenheit__return;
	        
        } else if( httpQueryParams.get("Fahrenheit") != null ){
	        
        	System.out.println("Invoking fahrenheitToCelsius...");
	        java.lang.String _fahrenheitToCelsius_fahrenheit = httpQueryParams.get("Fahrenheit");
	        java.lang.String _fahrenheitToCelsius__return = port.fahrenheitToCelsius(_fahrenheitToCelsius_fahrenheit);
	        System.out.println("fahrenheitToCelsius.result=" + _fahrenheitToCelsius__return);
	        temp = _fahrenheitToCelsius__return;
        
        }

        return temp;
    }

}
